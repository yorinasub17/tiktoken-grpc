name: lint-test-publish

on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:

permissions:
  checks: write
  contents: read

jobs:
  warmpycache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: install poetry
        run: pipx install poetry

      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: '3.10'
          cache: 'poetry'

      - run: poetry install

  # Run linter against protobuf files
  buflint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - uses: bufbuild/buf-setup-action@00661b48f00bf682921f8aab99306c7f1a7a3ec3 # v1.15.1
        with:
          version: 1.15.1
          github_token: ${{ github.token }}
      - uses: bufbuild/buf-lint-action@bd48f53224baaaf0fc55de9a913e7680ca6dbea4 # v1.0.3

  # Run linter against python files
  lint:
    runs-on: ubuntu-latest
    needs: warmpycache
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: install poetry
        run: pipx install poetry

      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: '3.10'
          cache: 'poetry'

      - run: poetry install

      - run: poetry run poe lint

  # Run python tests
  test:
    runs-on: ubuntu-latest
    needs: warmpycache
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: install poetry
        run: pipx install poetry

      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: '3.10'
          cache: 'poetry'

      - run: poetry install

      - run: poetry run poe test

  buildapp:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: install test utils
        run: |
          curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
          chmod +x container-structure-test-linux-amd64
          mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
          pip install ggshield

      - name: set up qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2.4.1

      - id: build-local
        name: build locally so that image can be tested
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          file: deployments/docker/Dockerfile
          push: false
          load: true
          tags: yorinasub17/tiktoken-grpc:test
          provenance: false

      - name: test docker images
        run: |
          container-structure-test test --image "$LOCAL_APP_IMAGE" \
            --config ./deployments/docker/test/ttsvc_structure_test.yaml
        env:
          LOCAL_APP_IMAGE: ${{ steps.build-local.outputs.imageid }}

      - name: scan docker images
        run: |
          ggshield secret scan docker docker.io/yorinasub17/tiktoken-grpc:test
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      # The rest of the job only runs if on main branch or release tag, and proceeds to publish the image on GHCR
      # including signing the image with cosign.
      - name: login to GitHub Container Registry
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')) }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: login to Docker Hub
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')) }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: yorinasub17
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - id: meta
        name: extract metadata for docker image tagging
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')) }}
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # v4.3.0
        with:
          images: |
            ghcr.io/yorinasub17/tiktoken-grpc
            yorinasub17/tiktoken-grpc
          tags: |
            type=sha
            type=ref,event=branch
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}

      - id: publish
        name: build and publish to ghcr if on main branch or release tag
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')) }}
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          file: deployments/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64

      - id: maintag
        name: extract main tag
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')) }}
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            tag=main
          else
            # get tag name without tags/refs/ prefix.
            tag="$(echo ${{ github.ref }} | cut -c11-)"
          fi
          echo "maintag=${tag}" >> "$GITHUB_OUTPUT"

      - name: install cosign
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')) }}
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65 # v3.0.1

      - name: sign images
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')) }}
        run: |
          cosign sign \
              ghcr.io/yorinasub17/tiktoken-grpc@${{ steps.publish.outputs.digest }} \
              -a sha=${{ github.sha }} \
              -a run_id=${{ github.run_id }} \
              -a run_attempt=${{ github.run_attempt }} \
              -a tag=${{ steps.maintag.outputs.maintag }} \
              -y
          cosign sign \
              yorinasub17/tiktoken-grpc@${{ steps.publish.outputs.digest }} \
              -a sha=${{ github.sha }} \
              -a run_id=${{ github.run_id }} \
              -a run_attempt=${{ github.run_attempt }} \
              -a tag=${{ steps.maintag.outputs.maintag }} \
              -y
