# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import tiktoken_pb2 as service_dot_v1_dot_tiktoken__pb2


class TiktokenServiceStub(object):
    """TiktokenService provides the gRPC service that wraps the functions of the tiktoken library.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NumTokens = channel.unary_unary(
                '/tiktoken.v1.TiktokenService/NumTokens',
                request_serializer=service_dot_v1_dot_tiktoken__pb2.NumTokensRequest.SerializeToString,
                response_deserializer=service_dot_v1_dot_tiktoken__pb2.NumTokensResponse.FromString,
                )


class TiktokenServiceServicer(object):
    """TiktokenService provides the gRPC service that wraps the functions of the tiktoken library.
    """

    def NumTokens(self, request, context):
        """Returns the number of tokens in a given text string based on the provided encoding.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TiktokenServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NumTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.NumTokens,
                    request_deserializer=service_dot_v1_dot_tiktoken__pb2.NumTokensRequest.FromString,
                    response_serializer=service_dot_v1_dot_tiktoken__pb2.NumTokensResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tiktoken.v1.TiktokenService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TiktokenService(object):
    """TiktokenService provides the gRPC service that wraps the functions of the tiktoken library.
    """

    @staticmethod
    def NumTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tiktoken.v1.TiktokenService/NumTokens',
            service_dot_v1_dot_tiktoken__pb2.NumTokensRequest.SerializeToString,
            service_dot_v1_dot_tiktoken__pb2.NumTokensResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
